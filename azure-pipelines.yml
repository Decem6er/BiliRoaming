# Android
# Build your Android project with Gradle.
# Add steps that test, sign, and distribute the APK, save build artifacts, and more:
# https://docs.microsoft.com/azure/devops/pipelines/languages/android

trigger:
- master

pool:
  vmImage: 'ubuntu-latest'

variables:
  CCACHE_DIR: $(Agent.BuildDirectory)/.ccache
  CCACHE_COMPILERCHECK: '%compiler% -dumpmachine; %compiler% -dumpversion'
  CCACHE_NOHASHDIR: 'true'
  CCACHE_MAXSIZE: 1G
  VERSION: $(Build.SourceVersion)

steps:
- script: |
    sudo apt-get update
    sudo apt-get install -y ccache
  displayName: 'Install ccache'

- checkout: self
  submodules: recursive
  fetchDepth: 0

- task: JavaToolInstaller@0
  inputs:
    versionSpec: '17'
    jdkArchitectureOption: 'x64'
    jdkSourceOption: 'PreInstalled'
  displayName: "Setup JDK 17"

- script: |
    echo "VERSION=$(echo$(Build.SourceVersion) | head -c 10)" >> $(Agent.TempDirectory)/version.env
  displayName: 'Retrieve version'

- script: |
    ccache -M $(CCACHE_MAXSIZE)
  displayName: 'Set up ccache'

- script: |
    echo 'org.gradle.caching=true' >> gradle.properties
    echo 'org.gradle.parallel=true' >> gradle.properties
    echo 'org.gradle.vfs.watch=true' >> gradle.properties
    echo 'org.gradle.jvmargs=-Xmx2048m' >> gradle.properties
    echo 'android.native.buildOutput=verbose' >> gradle.properties
  displayName: 'Modify gradle.properties'

- task: Gradle@3
  inputs:
    gradleWrapperFile: 'gradlew'
    options: '-PappVerName=$(VERSION)'
    tasks: 'assembleRelease assembleDebug'
    publishJUnitResults: true
    testResultsFiles: '**/TEST-*.xml'
    testRunTitle: 'Test Results'
    javaHomeOption: 'JDKVersion'
    sonarQubeRunAnalysis: false
    checkStyleRunAnalysis: true
    spotBugsAnalysis: false
- task: PublishBuildArtifacts@1
  inputs:
    PathtoPublish: 'app/build/outputs/apk'
    ArtifactName: 'snapshot'
  condition: succeeded()

- task: PublishBuildArtifacts@1
  inputs:
    PathtoPublish: 'app/build/outputs/mapping'
    ArtifactName: 'snapshot'
  condition: succeeded()

- task: PublishBuildArtifacts@1
  inputs:
    PathtoPublish: 'app/release'
    ArtifactName: 'snapshot'
  condition: succeeded()
